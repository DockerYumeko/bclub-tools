declare function ManagementNoTitle(): boolean;
declare function ManagementSarahUnlockQuest(): boolean;
declare function ManagementIsSarahOwner(): boolean;
declare function ManagementGetMistressAngryCount(InCount: any): boolean;
declare function ManagementMistressAngryAdd(): void;
declare function ManagementMistressWillRelease(): boolean;
declare function ManagementCanPlayWithoutPermission(): boolean;
declare function ManagementOwnerFromBondageCollege(): boolean;
declare function ManagementOwnerInPrivateRoom(): boolean;
declare function ManagementOwnerAway(): boolean;
declare function ManagementAllowReleaseChastity(): boolean;
declare function ManagementRefuseReleaseChastity(): boolean;
declare function ManagementOwnerPending(): boolean;
declare function ManagementOwnerAccepted(): boolean;
declare function ManagementOwnerRefused(): boolean;
declare function ManagementCanUnlockBra(): boolean;
declare function ManagementCanUnlockButt(): boolean;
declare function ManagementCanUnlockVulva(): boolean;
declare function ManagementCanUnlockNipples(): boolean;
declare function ManagementCanUnlockBelt(): boolean;
declare function ManagementEndChastityRelease(): void;
declare function ManagementCanReleaseFromOwnerFirst(): boolean;
declare function ManagementCanReleaseFromOwner(): boolean;
declare function ManagementCanBreakTrialOnline(): boolean;
declare function ManagementCanBeReleasedOnline(): boolean;
declare function ManagementCannotBeReleasedOnline(): boolean;
declare function ManagementCanBeReleased(): boolean;
declare function ManagementCannotBeReleased(): boolean;
declare function ManagementWillOwnPlayer(): boolean;
declare function ManagementWontOwnPlayer(): boolean;
declare function ManagementLoverFromBondageCollege(): boolean;
declare function ManagementCanBreakDatingLoverOnline(L: any): boolean;
declare function ManagementCanBreakUpLoverOnline(L: any): boolean;
declare function ManagementCannotBreakUpLoverOnline(L: any): boolean;
declare function ManagementCanBreakUpLoverNPC(L: any): boolean;
declare function ManagementCannotBreakUpLoverNPC(L: any): boolean;
declare function ManagementIsClubSlave(): boolean;
declare function ManagementWearingSlaveCollar(): boolean;
declare function ManagementCanTransferToRoom(): boolean;
declare function ManagementWontVisitRoom(): boolean;
declare function ManagementCanBeClubMistress(): any;
declare function ManagementCannotBeClubMistress(): any;
declare function ManagementCannotBeClubMistressLaugh(): any;
declare function ManagementCannotBeClubMistressTime(): any;
declare function ManagementMistressCanBePaid(): boolean;
declare function ManagementMistressCannotBePaid(): boolean;
declare function ManagementCanBeClubSlave(): boolean;
declare function ManagementCannotBeClubSlaveDominant(): boolean;
declare function ManagementCannotBeClubSlaveOwnerLock(): boolean;
declare function ManagementCanKiss(): any;
declare function ManagementCanMasturbate(): boolean;
declare function ManagementCanPlayWithSub(): boolean;
declare function ManagementCannotPlayWithSubLock(): boolean;
declare function ManagementNoMistressInPrivateRoom(): boolean;
declare function ManagementFriendIsChaste(): boolean;
declare function ManagementLoad(): void;
declare function ManagementRun(): void;
declare function ManagementClick(): void;
declare function ManagementPlayerStrip(): void;
declare function ManagementPlayerArmbinder(ChangeRep: any): void;
declare function ManagementPlayerRandomRestrain(): void;
declare function ManagementPlayerRandomRestrainPlay(): void;
declare function ManagementPlayerRelease(): void;
declare function ManagementSwitchToAngryMistress(): void;
declare function ManagementReleasePrivateRoom(): void;
declare function ManagementUnlockItem(ItemGroup: any): void;
declare function ManagementContactOwner(): void;
declare function ManagementReleaseFromOwner(RepChange: any): void;
declare function ManagementBreakTrialOnline(): void;
declare function ManagementBreakLover(L: any): void;
declare function ManagementSendMistressToPrivateRoom(RepChange: any): void;
declare function ManagementClubSlaveCollar(RepChange: any): void;
declare function ManagementFinishClubSlave(RepChange: any): void;
declare function ManagementClubSlaveRandomIntro(): void;
declare function ManagementFindClubSlaveRandomIntro(): void;
declare function ManagementRandomActivityStart(A: any): void;
declare function ManagementClubSlaveRandomActivityLaunch(): void;
declare function ManagementClubSlaveRandomActivityEnd(RepChange: any): void;
declare function ManagementClubSlaveTransferToRoom(): void;
declare function ManagementGetMistressOutfit(Color: any): void;
declare function ManagementPlayerMistressCutscene(): void;
declare function ManagementMistressPay(): void;
declare function ManagementMistressKicked(): void;
declare function ManagementFreeSarah(): void;
declare function ManagementActivityStruggleRestrain(): void;
declare function ManagementActivityStruggleStart(): void;
declare function ManagementStartQuiz(): void;
declare function ManagementRemoveGag(): void;
declare function ManagementCell(): void;
declare function ManagementMainHall(): void;
declare function ManagementClubSlaveActiviy(ActivityType: any, RepChange: any): void;
declare function ManagementClubSlaveVisitRoom(): void;
declare function ManagementChangeSlaveCollarType(NewType: any): void;
declare function ManagementClubSlaveDialog(C: any): void;
declare var ManagementBackground: string;
declare var ManagementMistress: any;
declare var ManagementSub: any;
declare var ManagementMistressAngryCount: number;
declare var ManagementMistressReleaseTimer: number;
declare var ManagementPlayerAppearance: any;
declare var ManagementMistressAllowPlay: boolean;
declare var ManagementCanReleaseChastity: boolean;
declare var ManagementEmpty: boolean;
declare var ManagementRandomGirl: any;
declare var ManagementRandomGirlArchetype: string;
declare var ManagementRandomActivityCount: number;
declare var ManagementRandomActivity: string;
declare var ManagementRandomActivityList: string[];
declare var ManagementRandomActivityCategory: string;
declare var ManagementRandomActivityCategoryList: string[];
declare var ManagementRandomTalkCount: number;
declare var ManagementVisitRoom: boolean;
declare var ManagementTimer: number;
